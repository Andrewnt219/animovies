{"version":3,"sources":["Apis/tmdb.js","Components/ui/LoadingIndicator/LoadingIndicator.module.css","Theme/variants.js","Components/ui/LoadingIndicator/LoadingIndicator.jsx","Features/helpers.js","Components/ui/Backdrop.jsx","Features/collectionSlice.js","Features/genreSlice.js","Features/searchSlice.js","Features/activeItemSlice.js","Apis/jikan.js","Theme/global.js","Theme/movieTheme.js","Theme/blueTheme.js","Theme/greenTheme.js","Theme/yellowTheme.js","Components/ThemeSwitcher.jsx","App.jsx","App/store.js","serviceWorker.js","index.js"],"names":["findGenreId","genreName","Object","values","genreMap","find","genre","name","toUpperCase","String","id","Axios","create","baseURL","params","api_key","process","language","module","exports","animation","stagger","container","hidden","opacity","show","transition","staggerChildren","child","y","popup","basic","initial","enter","exit","duration","fromTop","fromBottom","fromLeft","x","fromRight","LoadingIndicator","className","classes","spinner","rect1","rect2","rect3","rect4","rect5","asyncDispatchWrapper","fn","dispatch","actionFailed","a","console","log","response","data","status_message","fetchRequests","api","urls","responses","url","get","push","formatTmdbCollections","collections","map","collection","formatCollection","results","formatTmdbItem","formatter","item","genre_ids","genres","genreId","backdrop_path","mapPathToImg","poster_path","path","StyledBackdrop","styled","div","p","theme","zIndex","index","high","rgba","black","clickAble","Backdrop","handleClick","children","Boolean","onClick","collectionSlice","createSlice","initialState","movies","tvSeries","isLoading","error","reducers","fetchCollectionRequest","state","fetchCollectionSuccess","payload","fetchCollectionFail","collectionsSelector","collectionIsLoadingSelector","collectionErrorSelector","actions","fetchCollection","fetchTmdbItems","nowPlaying","topRated","popular","upComing","tvOnTheAir","tvTopRated","tvPopular","onTheAir","TMDB_URLS","tmdb","tmdbResponses","genreSlice","numberOfPages","fetchGenreRequest","fetchGenreSuccess","fetchGenreFailed","genreIsLoadingSelector","genreErrorSelector","genreCollectionSelector","fetchGenre","page","queries","sendDiscoverRequest","moviesResponse","tvResponse","total_pages","bind","endpoint","with_genres","searchSlice","fetchSearchRequest","fetchSearchSuccess","fetchSearchFailed","searchIsLoadingSelector","search","searchErrorSelector","searchCollectionSelector","fetchSearch","searchTerm","query","activeItemSlice","fetchItemDetailRequest","fetchItemDetailSuccess","fetchItemDetailFail","activeItemSelector","activeItem","activeItemIsLoadingSelector","activeItemError","fetchTmdbDetail","itemType","itemId","URLS","itemDetail","videos","recommendations","createGlobalStyle","white","darken","secondary","primary","sub1","bright","dark","warning","info","success","breakpoints","xs","sm","md","lg","xl","top","med","low","SwitchButton","button","ThemePanel","motion","Theme","bgColor","ThemeSwitcher","switchTheme","useState","showThemePanel","setShowThemePanel","window","localStorage","setItem","JSON","stringify","Fragment","variants","animate","movieTheme","greenTheme","blueTheme","yellowTheme","prev","Landing","React","lazy","MoviePage","ItemDetail","Genre","SearchResults","App","setTheme","useEffect","localTheme","getItem","parse","currentTheme","fallback","component","render","from","to","exact","configureStore","reducer","collectionReducer","activeItemReducer","genreReducer","searchReducer","location","hostname","match","ReactDOM","StrictMode","store","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b23a828c.chunk.js","sourcesContent":["import Axios from 'axios';\r\n\r\nexport default Axios.create({\r\n  baseURL: 'https://api.themoviedb.org/3',\r\n  params: {\r\n    api_key: process.env.REACT_APP_THEMOVIEDB,\r\n    language: 'en-US',\r\n  },\r\n});\r\n\r\n/* ---------------------------------- GENRE --------------------------------- */\r\nexport function findGenreId(genreName) {\r\n  //prettier-ignore\r\n  return Object\r\n    .values(genreMap)\r\n    .find((genre) => genre.name.toUpperCase() === String(genreName).toUpperCase())\r\n    .id;\r\n}\r\n\r\nexport function findGenreName(genreId) {\r\n  //prettier-ignore\r\n  return Object\r\n    .values(genreMap)\r\n    .find((genre) => genre.id === Number(genreId))\r\n    .name;\r\n}\r\n\r\nexport const genreMap = {\r\n  '12': {\r\n    id: 12,\r\n    name: 'Adventure',\r\n  },\r\n  '14': {\r\n    id: 14,\r\n    name: 'Fantasy',\r\n  },\r\n  '16': {\r\n    id: 16,\r\n    name: 'Animation',\r\n  },\r\n  '18': {\r\n    id: 18,\r\n    name: 'Drama',\r\n  },\r\n  '27': {\r\n    id: 27,\r\n    name: 'Horror',\r\n  },\r\n  '28': {\r\n    id: 28,\r\n    name: 'Action',\r\n  },\r\n  '35': {\r\n    id: 35,\r\n    name: 'Comedy',\r\n  },\r\n  '36': {\r\n    id: 36,\r\n    name: 'History',\r\n  },\r\n  '37': {\r\n    id: 37,\r\n    name: 'Western',\r\n  },\r\n  '53': {\r\n    id: 53,\r\n    name: 'Thriller',\r\n  },\r\n  '80': {\r\n    id: 80,\r\n    name: 'Crime',\r\n  },\r\n  '99': {\r\n    id: 99,\r\n    name: 'Documentary',\r\n  },\r\n  '878': {\r\n    id: 878,\r\n    name: 'Science Fiction',\r\n  },\r\n  '9648': {\r\n    id: 9648,\r\n    name: 'Mystery',\r\n  },\r\n  '10402': {\r\n    id: 10402,\r\n    name: 'Music',\r\n  },\r\n  '10749': {\r\n    id: 10749,\r\n    name: 'Romance',\r\n  },\r\n  '10751': {\r\n    id: 10751,\r\n    name: 'Family',\r\n  },\r\n  '10752': {\r\n    id: 10752,\r\n    name: 'War',\r\n  },\r\n  '10759': {\r\n    id: 10759,\r\n    name: 'Action & Adventure',\r\n  },\r\n  '10762': {\r\n    id: 10762,\r\n    name: 'Kids',\r\n  },\r\n  '10763': {\r\n    id: 10763,\r\n    name: 'News',\r\n  },\r\n  '10764': {\r\n    id: 10764,\r\n    name: 'Reality',\r\n  },\r\n  '10765': {\r\n    id: 10765,\r\n    name: 'Sci-Fi & Fantasy',\r\n  },\r\n  '10766': {\r\n    id: 10766,\r\n    name: 'Soap',\r\n  },\r\n  '10767': {\r\n    id: 10767,\r\n    name: 'Talk',\r\n  },\r\n  '10768': {\r\n    id: 10768,\r\n    name: 'War & Politics',\r\n  },\r\n  '10770': {\r\n    id: 10770,\r\n    name: 'TV Movie',\r\n  },\r\n};\r\n\r\n// export const movieGenreMap = {\r\n//   '12': {\r\n//     id: 12,\r\n//     name: 'Adventure',\r\n//   },\r\n//   '14': {\r\n//     id: 14,\r\n//     name: 'Fantasy',\r\n//   },\r\n//   '16': {\r\n//     id: 16,\r\n//     name: 'Animation',\r\n//   },\r\n//   '18': {\r\n//     id: 18,\r\n//     name: 'Drama',\r\n//   },\r\n//   '27': {\r\n//     id: 27,\r\n//     name: 'Horror',\r\n//   },\r\n//   '28': {\r\n//     id: 28,\r\n//     name: 'Action',\r\n//   },\r\n//   '35': {\r\n//     id: 35,\r\n//     name: 'Comedy',\r\n//   },\r\n//   '36': {\r\n//     id: 36,\r\n//     name: 'History',\r\n//   },\r\n//   '37': {\r\n//     id: 37,\r\n//     name: 'Western',\r\n//   },\r\n//   '53': {\r\n//     id: 53,\r\n//     name: 'Thriller',\r\n//   },\r\n//   '80': {\r\n//     id: 80,\r\n//     name: 'Crime',\r\n//   },\r\n//   '99': {\r\n//     id: 99,\r\n//     name: 'Documentary',\r\n//   },\r\n//   '878': {\r\n//     id: 878,\r\n//     name: 'Science Fiction',\r\n//   },\r\n//   '9648': {\r\n//     id: 9648,\r\n//     name: 'Mystery',\r\n//   },\r\n//   '10402': {\r\n//     id: 10402,\r\n//     name: 'Music',\r\n//   },\r\n//   '10749': {\r\n//     id: 10749,\r\n//     name: 'Romance',\r\n//   },\r\n//   '10751': {\r\n//     id: 10751,\r\n//     name: 'Family',\r\n//   },\r\n//   '10752': {\r\n//     id: 10752,\r\n//     name: 'War',\r\n//   },\r\n//   '10770': {\r\n//     id: 10770,\r\n//     name: 'TV Movie',\r\n//   },\r\n// };\r\n\r\n// export const tvGenreMap = {\r\n//   '16': {\r\n//     id: 16,\r\n//     name: 'Animation',\r\n//   },\r\n//   '18': {\r\n//     id: 18,\r\n//     name: 'Drama',\r\n//   },\r\n//   '35': {\r\n//     id: 35,\r\n//     name: 'Comedy',\r\n//   },\r\n//   '37': {\r\n//     id: 37,\r\n//     name: 'Western',\r\n//   },\r\n//   '80': {\r\n//     id: 80,\r\n//     name: 'Crime',\r\n//   },\r\n//   '99': {\r\n//     id: 99,\r\n//     name: 'Documentary',\r\n//   },\r\n//   '9648': {\r\n//     id: 9648,\r\n//     name: 'Mystery',\r\n//   },\r\n//   '10751': {\r\n//     id: 10751,\r\n//     name: 'Family',\r\n//   },\r\n//   '10759': {\r\n//     id: 10759,\r\n//     name: 'Action & Adventure',\r\n//   },\r\n//   '10762': {\r\n//     id: 10762,\r\n//     name: 'Kids',\r\n//   },\r\n//   '10763': {\r\n//     id: 10763,\r\n//     name: 'News',\r\n//   },\r\n//   '10764': {\r\n//     id: 10764,\r\n//     name: 'Reality',\r\n//   },\r\n//   '10765': {\r\n//     id: 10765,\r\n//     name: 'Sci-Fi & Fantasy',\r\n//   },\r\n//   '10766': {\r\n//     id: 10766,\r\n//     name: 'Soap',\r\n//   },\r\n//   '10767': {\r\n//     id: 10767,\r\n//     name: 'Talk',\r\n//   },\r\n//   '10768': {\r\n//     id: 10768,\r\n//     name: 'War & Politics',\r\n//   },\r\n// };\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingIndicator_spinner__2e9yt\",\"sk-stretchdelay\":\"LoadingIndicator_sk-stretchdelay__3ovlD\",\"rect2\":\"LoadingIndicator_rect2__23Pd6\",\"rect3\":\"LoadingIndicator_rect3__3RD9d\",\"rect4\":\"LoadingIndicator_rect4__1_PG8\",\"rect5\":\"LoadingIndicator_rect5__2TYN9\"};","export const animation = {\r\n  stagger: {\r\n    container: {\r\n      hidden: { opacity: 0 },\r\n      show: {\r\n        opacity: 1,\r\n        transition: {\r\n          staggerChildren: 0.2,\r\n        },\r\n      },\r\n    },\r\n    child: {\r\n      hidden: { opacity: 0, y: 20 },\r\n      show: { opacity: 1, y: 0 },\r\n    },\r\n  },\r\n  popup: {\r\n    basic: {\r\n      initial: { opacity: 0 },\r\n      enter: { opacity: 1 },\r\n      exit: { opacity: 0 },\r\n      transition: { duration: 0.2 },\r\n    },\r\n    fromTop: {\r\n      initial: { opacity: 0, y: -5 },\r\n      enter: { opacity: 1, y: 0 },\r\n      exit: { opacity: 0, y: -5 },\r\n      transition: { duration: 0.2 },\r\n    },\r\n    fromBottom: {\r\n      initial: { opacity: 0, y: 5 },\r\n      enter: { opacity: 1, y: 0 },\r\n      exit: { opacity: 0, y: 5 },\r\n      transition: { duration: 0.2 },\r\n    },\r\n    fromLeft: {\r\n      initial: { opacity: 0, x: -5 },\r\n      enter: { opacity: 1, x: 0 },\r\n      exit: { opacity: 0, x: -5 },\r\n      transition: { duration: 0.2 },\r\n    },\r\n    fromRight: {\r\n      initial: { opacity: 0, x: 5 },\r\n      enter: { opacity: 1, x: 0 },\r\n      exit: { opacity: 0, x: 5 },\r\n      transition: { duration: 0.2 },\r\n    },\r\n  },\r\n};\r\n","import React from 'react';\r\nimport classes from './LoadingIndicator.module.css';\r\n\r\nfunction LoadingIndicator() {\r\n  return (\r\n    <div className={classes.spinner}>\r\n      <div className={classes.rect1}></div>\r\n      <div className={classes.rect2}></div>\r\n      <div className={classes.rect3}></div>\r\n      <div className={classes.rect4}></div>\r\n      <div className={classes.rect5}></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoadingIndicator;\r\n","import { genreMap } from '../Apis/tmdb';\r\n\r\n/* --------------------------- formating requests --------------------------- */\r\n\r\n//NOTE put async action in a trycatch block and dispatch suitable action\r\nexport async function asyncDispatchWrapper(fn, dispatch, actionFailed) {\r\n  try {\r\n    await fn();\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch(actionFailed(error?.response?.data?.status_message ?? error));\r\n  }\r\n}\r\n\r\n// NOTE send request and format the reponse from tmdb\r\nexport async function fetchRequests(api, urls) {\r\n  const responses = [];\r\n  for (const url of urls) {\r\n    responses.push((await api.get(url)).data);\r\n  }\r\n  return responses;\r\n}\r\n\r\n/* ------------------ formatting the response(s) from TMDB ------------------ */\r\n\r\n//* format the collections from tmdb\r\nexport function formatTmdbCollections(collections) {\r\n  return collections.map((collection) =>\r\n    formatCollection(collection.results, formatTmdbItem)\r\n  );\r\n}\r\n\r\n//* format the collections from jikan\r\nexport function formatJikanCollections(collections) {\r\n  return collections.map((collection) => formatCollection(collection.top));\r\n}\r\n\r\n//* format one collection from tmdb\r\nexport function formatCollection(collection, formatter) {\r\n  return collection.map((item) => (formatter ? formatter(item) : item));\r\n}\r\n\r\n// * format an individual Tmdb item\r\nexport function formatTmdbItem(item) {\r\n  return {\r\n    ...item,\r\n    genre_ids: mapGenreIdsToNames(item.genre_ids),\r\n    backdrop_path: mapPathToImg(item.backdrop_path),\r\n    poster_path: mapPathToImg(item.poster_path),\r\n  };\r\n}\r\n\r\n/* --------------------------- formatting helpers --------------------------- */\r\n\r\n// * populate genre_ids (if exists) to [{id, name}]\r\nfunction mapGenreIdsToNames(genres) {\r\n  return genres?.map((genreId) => genreMap[genreId]);\r\n}\r\n\r\n// * rewrite the full path for imgs\r\nfunction mapPathToImg(path) {\r\n  const ORIGIN = 'http://image.tmdb.org/t/p/original';\r\n  const notFound =\r\n    'https://wompampsupport.azureedge.net/fetchimage?siteId=7575&v=2&jpgQuality=100&width=700&url=https%3A%2F%2Fi.kym-cdn.com%2Fentries%2Ficons%2Ffacebook%2F000%2F019%2F277%2Fconfusedtravolta.jpg';\r\n  return path ? ORIGIN + path : notFound;\r\n}\r\n","/* --------------------------------- IMPORT --------------------------------- */\r\nimport React from 'react';\r\nimport styled from 'styled-components/macro';\r\nimport PropTypes from 'prop-types';\r\nimport { rgba } from 'polished';\r\n\r\n/* -------------------------------- COMPONENT ------------------------------- */\r\n// NOTE renders a fullscreen backdrop\r\nfunction Backdrop({ handleClick, children, index }) {\r\n  return (\r\n    <StyledBackdrop\r\n      index={index}\r\n      clickAble={Boolean(handleClick)}\r\n      onClick={handleClick}\r\n    >\r\n      {children}\r\n    </StyledBackdrop>\r\n  );\r\n}\r\n\r\n/* --------------------------------- STYLING -------------------------------- */\r\nconst StyledBackdrop = styled.div`\r\n  z-index: ${(p) => p.theme.zIndex[p.index] ?? p.theme.zIndex.high};\r\n\r\n  content: '';\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: ${(p) => rgba(p.theme.black, 0.8)};\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  cursor: ${(p) => p.clickAble && 'pointer'};\r\n`;\r\n\r\n/* -------------------------------- VALIDATE -------------------------------- */\r\nBackdrop.propTypes = {\r\n  index: PropTypes.string,\r\n  handleClick: PropTypes.func,\r\n};\r\n\r\nexport default Backdrop;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport {\r\n  asyncDispatchWrapper,\r\n  fetchRequests,\r\n  formatTmdbCollections,\r\n  // formatJikanCollections,\r\n} from './helpers';\r\nimport tmdb from 'Apis/tmdb';\r\n// import jikan from 'Apis/jikan';\r\n\r\nconst collectionSlice = createSlice({\r\n  name: 'collection',\r\n  initialState: {\r\n    collections: {\r\n      movies: [],\r\n      tvSeries: [],\r\n      // animes: [],\r\n      // mangas: [],\r\n    },\r\n    isLoading: true,\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    fetchCollectionRequest: (state) => {\r\n      state.isLoading = true;\r\n      state.error = null;\r\n    },\r\n    fetchCollectionSuccess: (state, { payload }) => {\r\n      state.isLoading = false;\r\n      state.collections.movies = payload.movies;\r\n      state.collections.tvSeries = payload.tvSeries;\r\n      // state.collections.mangas = payload.mangas;\r\n      // state.collections.animes = payload.animes;\r\n    },\r\n    fetchCollectionFail: (state, { payload }) => {\r\n      state.isLoading = false;\r\n      state.error = payload;\r\n    },\r\n  },\r\n});\r\n\r\n/* --------------------------------- EXPORT --------------------------------- */\r\nexport default collectionSlice.reducer;\r\nexport const collectionsSelector = (state) => state.collection.collections;\r\n\r\nexport const collectionIsLoadingSelector = (state) =>\r\n  state.collection.isLoading;\r\nexport const collectionErrorSelector = (state) => state.collection.error;\r\nexport const {\r\n  fetchCollectionRequest,\r\n  fetchCollectionSuccess,\r\n  fetchCollectionFail,\r\n} = collectionSlice.actions;\r\n\r\n/* ---------------------------------- THUNK --------------------------------- */\r\nexport const fetchCollection = (payload) => (dispatch) => {\r\n  async function sendHttp() {\r\n    dispatch(fetchCollectionRequest());\r\n\r\n    const [\r\n      nowPlaying,\r\n      topRated,\r\n      popular,\r\n      upComing,\r\n      //\r\n      tvOnTheAir,\r\n      tvTopRated,\r\n      tvPopular,\r\n    ] = await fetchTmdbItems();\r\n\r\n    // const [\r\n    //   animeAiring,\r\n    //   animeUpcoming,\r\n    //   animeTv,\r\n    //   animeMovie,\r\n    //   //\r\n    //   manga,\r\n    //   manhwa,\r\n    //   manhua,\r\n    // ] = await fetchJikanItems();\r\n\r\n    // //* preparing payloads\r\n    const movies = {\r\n      nowPlaying,\r\n      popular,\r\n      topRated,\r\n      upComing,\r\n    };\r\n    const tvSeries = {\r\n      onTheAir: tvOnTheAir,\r\n      topRated: tvTopRated,\r\n      popular: tvPopular,\r\n    };\r\n\r\n    // const animes = {\r\n    //   airing: animeAiring,\r\n    //   upcoming: animeUpcoming,\r\n    //   tv: animeTv,\r\n    //   movie: animeMovie,\r\n    // };\r\n    // const mangas = { manga, manhwa, manhua };\r\n\r\n    dispatch(\r\n      fetchCollectionSuccess({\r\n        movies,\r\n        tvSeries,\r\n        // animes,\r\n        // mangas,\r\n      })\r\n    );\r\n  }\r\n\r\n  asyncDispatchWrapper(sendHttp, dispatch, fetchCollectionFail);\r\n};\r\nasync function fetchTmdbItems() {\r\n  const TMDB_URLS = [\r\n    '/movie/now_playing',\r\n    '/movie/top_rated',\r\n    '/movie/popular',\r\n    '/movie/upcoming',\r\n    //\r\n    '/tv/on_the_air',\r\n    '/tv/top_rated',\r\n    '/tv/popular',\r\n  ];\r\n  const tmdbResponses = await fetchRequests(tmdb, TMDB_URLS);\r\n  return formatTmdbCollections(tmdbResponses);\r\n}\r\n\r\n// async function fetchJikanItems() {\r\n//   const JIKAN_URLS = [\r\n//     //\r\n//     '/top/anime/1/airing',\r\n//     '/top/anime/1/upcoming',\r\n//     '/top/anime/1/tv',\r\n//     '/top/anime/1/movie',\r\n//     //\r\n//     '/top/manga/1/manga',\r\n//     '/top/manga/1/manhwa',\r\n//     '/top/manga/1/manhua',\r\n//   ];\r\n//   const jikanResponses = await fetchRequests(jikan, JIKAN_URLS);\r\n//   return formatJikanCollections(jikanResponses);\r\n// }\r\n\r\n// async function populateAnimeItems(animes) {\r\n//   for (let anime of animes) {\r\n//     const { data } = await jikan.get(`/anime/${anime.mal_id}`);\r\n//     anime = data;\r\n//   }\r\n// }\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport tmdb, { findGenreId } from 'Apis/tmdb';\r\nimport {\r\n  asyncDispatchWrapper,\r\n  formatCollection,\r\n  formatTmdbItem,\r\n} from './helpers';\r\n\r\nconst genreSlice = createSlice({\r\n  name: 'genre',\r\n  initialState: {\r\n    isLoading: true,\r\n    error: null,\r\n    collection: {\r\n      movies: [],\r\n      tvSeries: [],\r\n      numberOfPages: 0,\r\n    },\r\n  },\r\n  reducers: {\r\n    fetchGenreRequest: (state) => {\r\n      state.isLoading = true;\r\n      state.error = null;\r\n    },\r\n    fetchGenreSuccess: (state, { payload }) => {\r\n      state.isLoading = false;\r\n      state.collection.movies = payload.movies;\r\n      state.collection.tvSeries = payload.tvSeries;\r\n      state.collection.numberOfPages = payload.numberOfPages;\r\n    },\r\n    fetchGenreFailed: (state, { payload }) => {\r\n      state.isLoading = false;\r\n      state.error = payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport default genreSlice.reducer;\r\nexport const {\r\n  fetchGenreFailed,\r\n  fetchGenreSuccess,\r\n  fetchGenreRequest,\r\n} = genreSlice.actions;\r\nexport const genreIsLoadingSelector = (state) => state.genre.isLoading;\r\nexport const genreErrorSelector = (state) => state.genre.error;\r\nexport const genreCollectionSelector = (state) => state.genre.collection;\r\n\r\nexport const fetchGenre = ({ genreName, page, queries }) => (dispatch) => {\r\n  const genreId = findGenreId(genreName);\r\n\r\n  asyncDispatchWrapper(\r\n    getGenre.bind(this, genreId, page),\r\n    dispatch,\r\n    fetchGenreFailed\r\n  );\r\n\r\n  async function getGenre(genreId, page) {\r\n    dispatch(fetchGenreRequest());\r\n\r\n    const { data: moviesResponse } = await sendDiscoverRequest(\r\n      'movie',\r\n      genreId,\r\n      page,\r\n      queries\r\n    );\r\n    const { data: tvResponse } = await sendDiscoverRequest(\r\n      'tv',\r\n      genreId,\r\n      page,\r\n      queries\r\n    );\r\n\r\n    dispatch(\r\n      fetchGenreSuccess({\r\n        movies: formatCollection(moviesResponse.results, formatTmdbItem),\r\n        tvSeries: formatCollection(tvResponse.results, formatTmdbItem),\r\n        numberOfPages:\r\n          moviesResponse.total_pages > tvResponse.total_pages\r\n            ? tvResponse.total_pages\r\n            : moviesResponse.total_pages,\r\n      })\r\n    );\r\n  }\r\n};\r\nfunction sendDiscoverRequest(endpoint, genreId, page, queries) {\r\n  return tmdb.get(`discover/${endpoint}`, {\r\n    params: {\r\n      page,\r\n      with_genres: genreId,\r\n      ...queries,\r\n    },\r\n  });\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport tmdb from 'Apis/tmdb';\r\nimport {\r\n  asyncDispatchWrapper,\r\n  formatCollection,\r\n  formatTmdbItem,\r\n} from './helpers';\r\n\r\nconst searchSlice = createSlice({\r\n  name: 'search',\r\n  initialState: {\r\n    isLoading: true,\r\n    error: null,\r\n    collection: {\r\n      movies: [],\r\n      tvSeries: [],\r\n      numberOfPages: 0,\r\n    },\r\n  },\r\n  reducers: {\r\n    fetchSearchRequest: (state) => {\r\n      state.isLoading = true;\r\n      state.error = null;\r\n    },\r\n    fetchSearchSuccess: (state, { payload }) => {\r\n      state.isLoading = false;\r\n      state.collection.movies = payload.movies;\r\n      state.collection.tvSeries = payload.tvSeries;\r\n      state.collection.numberOfPages = payload.numberOfPages;\r\n    },\r\n    fetchSearchFailed: (state, { payload }) => {\r\n      state.isLoading = false;\r\n      state.error = payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport default searchSlice.reducer;\r\nexport const {\r\n  fetchSearchFailed,\r\n  fetchSearchSuccess,\r\n  fetchSearchRequest,\r\n} = searchSlice.actions;\r\nexport const searchIsLoadingSelector = (state) => state.search.isLoading;\r\nexport const searchErrorSelector = (state) => state.search.error;\r\nexport const searchCollectionSelector = (state) => state.search.collection;\r\n\r\nexport const fetchSearch = ({ searchTerm, page }) => (dispatch) => {\r\n  asyncDispatchWrapper(\r\n    getSearchResults.bind(this, searchTerm, page),\r\n    dispatch,\r\n    fetchSearchFailed\r\n  );\r\n\r\n  async function getSearchResults(searchTerm, page) {\r\n    dispatch(fetchSearchRequest());\r\n\r\n    const { data: moviesResponse } = await sendDiscoverRequest(\r\n      'movie',\r\n      searchTerm,\r\n      page\r\n    );\r\n    const { data: tvResponse } = await sendDiscoverRequest(\r\n      'tv',\r\n      searchTerm,\r\n      page\r\n    );\r\n\r\n    dispatch(\r\n      fetchSearchSuccess({\r\n        movies: formatCollection(moviesResponse.results, formatTmdbItem),\r\n        tvSeries: formatCollection(tvResponse.results, formatTmdbItem),\r\n        numberOfPages:\r\n          moviesResponse.total_pages > tvResponse.total_pages\r\n            ? tvResponse.total_pages\r\n            : moviesResponse.total_pages,\r\n      })\r\n    );\r\n  }\r\n};\r\nfunction sendDiscoverRequest(endpoint, searchTerm, page) {\r\n  return tmdb.get(`search/${endpoint}`, {\r\n    params: {\r\n      page,\r\n      query: searchTerm,\r\n    },\r\n  });\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport {\r\n  asyncDispatchWrapper,\r\n  formatTmdbItem,\r\n  fetchRequests,\r\n  formatCollection,\r\n} from './helpers';\r\n\r\nimport tmdb from 'Apis/tmdb';\r\nimport jikan from 'Apis/jikan';\r\nconst activeItemSlice = createSlice({\r\n  name: 'activeItem',\r\n  initialState: {\r\n    isLoading: true,\r\n    error: null,\r\n    item: {},\r\n  },\r\n  reducers: {\r\n    fetchItemDetailRequest: (state) => {\r\n      state.isLoading = true;\r\n      state.error = null;\r\n    },\r\n\r\n    fetchItemDetailSuccess: (state, { payload }) => {\r\n      state.isLoading = false;\r\n      state.item = payload;\r\n    },\r\n\r\n    fetchItemDetailFail: (state, { payload }) => {\r\n      state.isLoading = false;\r\n      state.error = payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport default activeItemSlice.reducer;\r\nexport const activeItemSelector = (state) => state.activeItem.item;\r\nexport const activeItemIsLoadingSelector = (state) =>\r\n  state.activeItem.isLoading;\r\nexport const activeItemError = (state) => state.activeItem.error;\r\nexport const {\r\n  fetchItemDetailSuccess,\r\n  fetchItemDetailRequest,\r\n  fetchItemDetailFail,\r\n} = activeItemSlice.actions;\r\n\r\nexport const fetchTmdbDetail = ({ itemType, itemId }) => (dispatch) => {\r\n  async function getItemDetail() {\r\n    dispatch(fetchItemDetailRequest());\r\n    const URLS = [\r\n      `/${itemType}/${itemId}`,\r\n      `/${itemType}/${itemId}/videos`,\r\n      `/${itemType}/${itemId}/recommendations`,\r\n    ];\r\n    //* FETCHING\r\n    const [itemDetail, videos, recommendations] = await fetchRequests(\r\n      tmdb,\r\n      URLS\r\n    );\r\n\r\n    //* MERGING responses\r\n    const payload = {\r\n      itemDetail: formatTmdbItem(itemDetail),\r\n      videos: { ...formatCollection(videos.results, formatTmdbItem) },\r\n      recommendations: [\r\n        ...formatCollection(recommendations.results, formatTmdbItem),\r\n      ],\r\n    };\r\n\r\n    dispatch(fetchItemDetailSuccess(payload));\r\n  }\r\n  asyncDispatchWrapper(getItemDetail, dispatch, fetchItemDetailFail);\r\n};\r\n\r\nexport const fetchJikanDetail = ({ itemType, itemId }) => (dispatch) => {\r\n  async function getItemDetail() {\r\n    dispatch(fetchItemDetailRequest());\r\n\r\n    const res = await jikan.get(`/${itemType}/${itemId}`);\r\n\r\n    dispatch(fetchItemDetailSuccess(res.data));\r\n  }\r\n  asyncDispatchWrapper(getItemDetail, dispatch, fetchItemDetailFail);\r\n};\r\n","import Axios from 'axios';\r\n\r\nexport default Axios.create({\r\n  baseURL: 'https://api.jikan.moe/v3',\r\n});\r\n\r\nexport const genreMap = {\r\n  anime: {\r\n    Action: 1,\r\n    Adventure: 2,\r\n    Cars: 3,\r\n    Comedy: 4,\r\n    Dementia: 5,\r\n    Demons: 6,\r\n    Mystery: 7,\r\n    Drama: 8,\r\n    Ecchi: 9,\r\n    Fantasy: 10,\r\n    Game: 11,\r\n    Hentai: 12,\r\n    Historical: 13,\r\n    Horror: 14,\r\n    Kids: 15,\r\n    Magic: 16,\r\n    MartialArts: 17,\r\n    Mecha: 18,\r\n    Music: 19,\r\n    Parody: 20,\r\n    Samurai: 21,\r\n    Romance: 22,\r\n    School: 23,\r\n    SciFi: 24,\r\n    Shoujo: 25,\r\n    ShoujoAi: 26,\r\n    Shounen: 27,\r\n    ShounenAi: 28,\r\n    Space: 29,\r\n    Sports: 30,\r\n    SuperPower: 31,\r\n    Vampire: 32,\r\n    Yaoi: 33,\r\n    Yuri: 34,\r\n    Harem: 35,\r\n    SliceOfLife: 36,\r\n    Supernatural: 37,\r\n    Military: 38,\r\n    Police: 39,\r\n    Psychological: 40,\r\n    Thriller: 41,\r\n    Seinen: 42,\r\n    Josei: 43,\r\n  },\r\n  manga: {\r\n    Action: 1,\r\n    Adventure: 2,\r\n    Cars: 3,\r\n    Comedy: 4,\r\n    Dementia: 5,\r\n    Demons: 6,\r\n    Mystery: 7,\r\n    Drama: 8,\r\n    Ecchi: 9,\r\n    Fantasy: 10,\r\n    Game: 11,\r\n    Hentai: 12,\r\n    Historical: 13,\r\n    Horror: 14,\r\n    Kids: 15,\r\n    Magic: 16,\r\n    MartialArts: 17,\r\n    Mecha: 18,\r\n    Music: 19,\r\n    Parody: 20,\r\n    Samurai: 21,\r\n    Romance: 22,\r\n    School: 23,\r\n    SciFi: 24,\r\n    Shoujo: 25,\r\n    ShoujoAi: 26,\r\n    Shounen: 27,\r\n    ShounenAi: 28,\r\n    Space: 29,\r\n    Sports: 30,\r\n    SuperPower: 31,\r\n    Vampire: 32,\r\n    Yaoi: 33,\r\n    Yuri: 34,\r\n    Harem: 35,\r\n    SliceOfLife: 36,\r\n    Supernatural: 37,\r\n    Military: 38,\r\n    Police: 39,\r\n    Psychological: 40,\r\n    Seinen: 41,\r\n    Josei: 42,\r\n    Doujinshi: 43,\r\n    GenderBender: 44,\r\n    Thriller: 45,\r\n  },\r\n};\r\n","import { createGlobalStyle } from 'styled-components';\r\nimport { darken } from 'polished';\r\n\r\nexport default createGlobalStyle`  \r\n  :root {\r\n    font-family: 'Roboto', sans-serif;\r\n    font-size: 10px;\r\n    color: ${(p) => p.theme.white};\r\n  }\r\n\r\n  html, body, #root {\r\n    position: relative;\r\n    width: 100%;\r\n    \r\n    background-color: ${(p) => darken(0.1, p.theme.secondary)}\r\n  }\r\n  \r\n  *, *::before, *::after {\r\n    margin: 0;\r\n    box-sizing: border-box;\r\n  };\r\n\r\n`;\r\n","export default {\r\n  //* named after the route\r\n  name: 'tmdb',\r\n  primary: '#BF1F5A',\r\n  secondary: '#404040',\r\n  white: '#F2F2F2',\r\n  sub1: '#FED500',\r\n  bright: '#F2695C',\r\n  dark: '#404040',\r\n\r\n  error: '#f44336',\r\n  warning: '#ff9800',\r\n  info: '#2196f3',\r\n  success: '#4caf50',\r\n  black: '#404040',\r\n\r\n  breakpoints: {\r\n    xs: '450px',\r\n    sm: '600px',\r\n    md: '900px',\r\n    lg: '1280px',\r\n    xl: '1920px',\r\n  },\r\n\r\n  zIndex: {\r\n    top: '1000',\r\n    high: '500',\r\n    med: '100',\r\n    low: '1',\r\n  },\r\n};\r\n","import theme from './movieTheme';\r\nexport default {\r\n  ...theme,\r\n  name: 'blueTheme',\r\n  primary: '#3498DB',\r\n  secondary: '#2C3E50',\r\n  white: '#ECF0F1',\r\n  sub1: '#E74C3C',\r\n};\r\n","import theme from './movieTheme';\r\nexport default {\r\n  ...theme,\r\n  name: 'greenTheme',\r\n  primary: '#A9CF54',\r\n  secondary: '#52656B',\r\n  white: '#FFFFFF',\r\n  sub1: '#04BFBF',\r\n};\r\n","import theme from './movieTheme';\r\nexport default {\r\n  ...theme,\r\n  name: 'yellowTheme',\r\n\r\n  primary: '#EFC94A',\r\n  secondary: '#334D5C',\r\n  white: '#ECF0F1',\r\n  sub1: '#DF5A49',\r\n};\r\n// 45B29D\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components/macro';\r\nimport { IoMdColorPalette } from 'react-icons/io';\r\nimport movieTheme from 'Theme/movieTheme';\r\nimport blueTheme from 'Theme/blueTheme';\r\nimport greenTheme from 'Theme/greenTheme';\r\nimport yellowTheme from 'Theme/yellowTheme';\r\n\r\nimport Backdrop from './ui/Backdrop';\r\nimport { AnimatePresence, motion } from 'framer-motion';\r\nimport { animation } from 'Theme/variants';\r\n\r\nfunction ThemeSwitcher({ switchTheme }) {\r\n  const [showThemePanel, setShowThemePanel] = useState(false);\r\n\r\n  const handleClick = (theme) => {\r\n    switchTheme(theme);\r\n    window.localStorage.setItem('theme', JSON.stringify(theme));\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AnimatePresence>\r\n        {showThemePanel && (\r\n          <React.Fragment>\r\n            <Backdrop\r\n              index=\"med\"\r\n              handleClick={() => setShowThemePanel(false)}\r\n            ></Backdrop>\r\n            <ThemePanel\r\n              variants={animation.stagger.container}\r\n              initial=\"hidden\"\r\n              animate=\"show\"\r\n              exit=\"hidden\"\r\n            >\r\n              <Theme\r\n                variants={animation.stagger.child}\r\n                bgColor={movieTheme.primary}\r\n                onClick={() => handleClick(movieTheme)}\r\n              />\r\n              <Theme\r\n                variants={animation.stagger.child}\r\n                bgColor={greenTheme.primary}\r\n                onClick={() => handleClick(greenTheme)}\r\n              />\r\n              <Theme\r\n                variants={animation.stagger.child}\r\n                bgColor={blueTheme.primary}\r\n                onClick={() => handleClick(blueTheme)}\r\n              />\r\n              <Theme\r\n                variants={animation.stagger.child}\r\n                bgColor={yellowTheme.primary}\r\n                onClick={() => handleClick(yellowTheme)}\r\n              />\r\n            </ThemePanel>\r\n          </React.Fragment>\r\n        )}\r\n      </AnimatePresence>\r\n      <SwitchButton onClick={() => setShowThemePanel((prev) => !prev)}>\r\n        <IoMdColorPalette />\r\n      </SwitchButton>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst SwitchButton = styled.button`\r\n  position: fixed;\r\n  bottom: 1rem;\r\n  right: 1rem;\r\n  z-index: ${(p) => p.theme.zIndex.high};\r\n\r\n  width: 5rem;\r\n  height: 5rem;\r\n  background-color: ${(p) => p.theme.primary};\r\n  border-radius: 100%;\r\n  cursor: pointer;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  & > svg {\r\n    fill: ${(p) => p.theme.white};\r\n    width: 3rem;\r\n    height: 3rem;\r\n  }\r\n`;\r\n\r\nconst ThemePanel = styled(motion.div)`\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  z-index: ${(p) => p.theme.zIndex.high};\r\n\r\n  transform: translate(-50%, -50%);\r\n  padding: 2rem;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 2vmin;\r\n`;\r\n\r\nconst Theme = styled(motion.div)`\r\n  background-color: ${(p) => p.bgColor};\r\n  width: 15vmin;\r\n  height: 15vmin;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport default ThemeSwitcher;\r\n","import React, { useState, useEffect, Suspense } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { ThemeProvider } from 'styled-components';\r\n\r\nimport GlobalStyle from 'Theme/global';\r\nimport movieTheme from 'Theme/movieTheme';\r\nimport ThemeSwitcher from 'Components/ThemeSwitcher';\r\nimport LoadingIndicator from 'Components/ui/LoadingIndicator/LoadingIndicator';\r\n\r\nconst Landing = React.lazy(() => import('Pages/Landing'));\r\nconst MoviePage = React.lazy(() => import('Pages/MoviePage'));\r\nconst ItemDetail = React.lazy(() => import('Pages/ItemDetail'));\r\nconst Genre = React.lazy(() => import('Pages/Genre'));\r\nconst SearchResults = React.lazy(() => import('Pages/SearchResults'));\r\n\r\nfunction App() {\r\n  const [theme, setTheme] = useState(movieTheme);\r\n\r\n  useEffect(() => {\r\n    const localTheme = window.localStorage.getItem('theme');\r\n    localTheme && setTheme(JSON.parse(localTheme));\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme ?? movieTheme}>\r\n      <GlobalStyle />\r\n\r\n      <ThemeSwitcher currentTheme={theme} switchTheme={setTheme} />\r\n      <Suspense fallback={<LoadingIndicator />}>\r\n        <Switch>\r\n          <Route path=\"/tmdb/discover/:genreName/:page\" component={Genre} />\r\n          <Route path=\"/tmdb/:itemType/:itemId\" component={ItemDetail} />\r\n\r\n          <Route path=\"/tmdb/search\" component={SearchResults} />\r\n          <Route path=\"/tmdb/all\" component={MoviePage} />\r\n          {/* <Route path=\"/jikan/all\" component={AnimePage} /> */}\r\n\r\n          <Route path=\"/tmdb\" component={Landing} />\r\n          <Route path=\"/404\" render={() => <h1>404</h1>} />\r\n\r\n          <Redirect from=\"/\" to=\"/tmdb\" exact />\r\n          <Redirect to=\"/404\" />\r\n        </Switch>\r\n      </Suspense>\r\n    </ThemeProvider>\r\n  );\r\n}\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport collectionReducer from 'Features/collectionSlice';\r\nimport activeItemReducer from 'Features/activeItemSlice';\r\nimport genreReducer from 'Features/genreSlice';\r\nimport searchReducer from 'Features/searchSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    collection: collectionReducer,\r\n    activeItem: activeItemReducer,\r\n    genre: genreReducer,\r\n    search: searchReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from 'App';\r\nimport store from 'App/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <HashRouter basename=\"/\">\r\n        <App />\r\n      </HashRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}